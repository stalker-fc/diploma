ARG APP_ENV=development

# ---------------------------------------------------------------
# base-builder-layer
FROM python:3.8 as base-builder

WORKDIR /builder

# ---------------------------------------------------------------
# production image includes only dependencies which are in requirements.txt
FROM base-builder AS production-builder

COPY requirements.txt .

RUN pip wheel --no-cache-dir --wheel-dir /wheels -r requirements.txt

# ---------------------------------------------------------------
# development image contains production requirements and test requirements.
FROM production-builder AS development-builder

COPY requirements.tests.txt .

RUN pip wheel --no-cache-dir --wheel-dir /wheels -r requirements.tests.txt

# ---------------------------------------------------------------
# choose builder image by APP_ENV
FROM ${APP_ENV}-builder AS builder

# ---------------------------------------------------------------
# base image for dependencies installation
FROM python:3.8-slim as base

# installing app dependencies
COPY --from=builder /wheels /wheels
RUN pip install --user --no-cache /wheels/*
RUN pip check

# ---------------------------------------------------------------
# image for tests
FROM base AS test

USER $APP_USER

# copying application-data
COPY /app ./app
COPY /tests ./tests

ENTRYPOINT ["python", "-m", "pytest", "tests/"]

# ---------------------------------------------------------------
# image for app
FROM base AS app

# copying application-data
COPY /app ./app
COPY main.py .

ENTRYPOINT ["python", "-m", "main.py"]
